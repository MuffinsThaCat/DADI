// Mocks generated by Mockito 5.4.4 from annotations
// in dadi/test/auction_detail_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:ui' as _i8;

import 'package:dadi/models/auction.dart' as _i5;
import 'package:dadi/models/operation_result.dart' as _i2;
import 'package:dadi/services/settings_service.dart' as _i6;
import 'package:dadi/services/web3_service.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeOperationResult_0<T> extends _i1.SmartFake
    implements _i2.OperationResult<T> {
  _FakeOperationResult_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Web3Service].
///
/// See the documentation for Mockito's code generation for more information.
class MockWeb3Service extends _i1.Mock implements _i3.Web3Service {
  MockWeb3Service() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isMockMode => (super.noSuchMethod(
        Invocation.getter(#isMockMode),
        returnValue: false,
      ) as bool);

  @override
  set isMockMode(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #isMockMode,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isContractInitialized => (super.noSuchMethod(
        Invocation.getter(#isContractInitialized),
        returnValue: false,
      ) as bool);

  @override
  Map<String, Map<String, dynamic>> get activeAuctions => (super.noSuchMethod(
        Invocation.getter(#activeAuctions),
        returnValue: <String, Map<String, dynamic>>{},
      ) as Map<String, Map<String, dynamic>>);

  @override
  bool get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i4.Future<void> logEthereumProviderStatus() => (super.noSuchMethod(
        Invocation.method(
          #logEthereumProviderStatus,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<bool> connect() => (super.noSuchMethod(
        Invocation.method(
          #connect,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<bool> connectWithJsonRpc() => (super.noSuchMethod(
        Invocation.method(
          #connectWithJsonRpc,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<bool> initializeContract() => (super.noSuchMethod(
        Invocation.method(
          #initializeContract,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<void> loadActiveAuctions() => (super.noSuchMethod(
        Invocation.method(
          #loadActiveAuctions,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> placeBid(
    String? deviceId,
    double? amountEth,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #placeBid,
          [
            deviceId,
            amountEth,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<bool> placeBidLegacy(
    String? deviceId,
    double? amountEth,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #placeBidLegacy,
          [
            deviceId,
            amountEth,
          ],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<void> finalizeAuction(String? deviceId) => (super.noSuchMethod(
        Invocation.method(
          #finalizeAuction,
          [deviceId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<bool> finalizeAuctionLegacy(String? deviceId) =>
      (super.noSuchMethod(
        Invocation.method(
          #finalizeAuctionLegacy,
          [deviceId],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<bool> testContract() => (super.noSuchMethod(
        Invocation.method(
          #testContract,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<void> disconnect() => (super.noSuchMethod(
        Invocation.method(
          #disconnect,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<bool> toggleMockMode() => (super.noSuchMethod(
        Invocation.method(
          #toggleMockMode,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<bool> isMetaMaskAvailable() => (super.noSuchMethod(
        Invocation.method(
          #isMetaMaskAvailable,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<_i2.OperationResult<_i5.Auction>> createAuction({
    required String? deviceId,
    required DateTime? startTime,
    required Duration? duration,
    required double? minimumBid,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createAuction,
          [],
          {
            #deviceId: deviceId,
            #startTime: startTime,
            #duration: duration,
            #minimumBid: minimumBid,
          },
        ),
        returnValue: _i4.Future<_i2.OperationResult<_i5.Auction>>.value(
            _FakeOperationResult_0<_i5.Auction>(
          this,
          Invocation.method(
            #createAuction,
            [],
            {
              #deviceId: deviceId,
              #startTime: startTime,
              #duration: duration,
              #minimumBid: minimumBid,
            },
          ),
        )),
      ) as _i4.Future<_i2.OperationResult<_i5.Auction>>);

  @override
  _i4.Future<_i2.OperationResult<_i5.Auction>> getAuction(
          {required String? deviceId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAuction,
          [],
          {#deviceId: deviceId},
        ),
        returnValue: _i4.Future<_i2.OperationResult<_i5.Auction>>.value(
            _FakeOperationResult_0<_i5.Auction>(
          this,
          Invocation.method(
            #getAuction,
            [],
            {#deviceId: deviceId},
          ),
        )),
      ) as _i4.Future<_i2.OperationResult<_i5.Auction>>);

  @override
  _i4.Future<_i2.OperationResult<double>> placeBidNew({
    required String? deviceId,
    required double? amount,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #placeBidNew,
          [],
          {
            #deviceId: deviceId,
            #amount: amount,
          },
        ),
        returnValue: _i4.Future<_i2.OperationResult<double>>.value(
            _FakeOperationResult_0<double>(
          this,
          Invocation.method(
            #placeBidNew,
            [],
            {
              #deviceId: deviceId,
              #amount: amount,
            },
          ),
        )),
      ) as _i4.Future<_i2.OperationResult<double>>);

  @override
  _i4.Future<_i2.OperationResult<bool>> finalizeAuctionNew(
          {required String? deviceId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #finalizeAuctionNew,
          [],
          {#deviceId: deviceId},
        ),
        returnValue: _i4.Future<_i2.OperationResult<bool>>.value(
            _FakeOperationResult_0<bool>(
          this,
          Invocation.method(
            #finalizeAuctionNew,
            [],
            {#deviceId: deviceId},
          ),
        )),
      ) as _i4.Future<_i2.OperationResult<bool>>);

  @override
  _i4.Future<_i2.OperationResult<bool>> cancelAuction(
          {required String? deviceId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #cancelAuction,
          [],
          {#deviceId: deviceId},
        ),
        returnValue: _i4.Future<_i2.OperationResult<bool>>.value(
            _FakeOperationResult_0<bool>(
          this,
          Invocation.method(
            #cancelAuction,
            [],
            {#deviceId: deviceId},
          ),
        )),
      ) as _i4.Future<_i2.OperationResult<bool>>);

  @override
  _i4.Future<Map<String, dynamic>> checkNetworkStatus() => (super.noSuchMethod(
        Invocation.method(
          #checkNetworkStatus,
          [],
        ),
        returnValue:
            _i4.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i4.Future<Map<String, dynamic>>);

  @override
  void initializeWithSettings(_i6.SettingsService? settingsService) =>
      super.noSuchMethod(
        Invocation.method(
          #initializeWithSettings,
          [settingsService],
        ),
        returnValueForMissingStub: null,
      );

  @override
  String getRpcUrl() => (super.noSuchMethod(
        Invocation.method(
          #getRpcUrl,
          [],
        ),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.method(
            #getRpcUrl,
            [],
          ),
        ),
      ) as String);

  @override
  String getContractAddress() => (super.noSuchMethod(
        Invocation.method(
          #getContractAddress,
          [],
        ),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.method(
            #getContractAddress,
            [],
          ),
        ),
      ) as String);

  @override
  void addListener(_i8.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i8.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
