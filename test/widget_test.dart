import 'package:flutter/material.dart';
import 'package:flutter_test/flutter_test.dart';
import 'package:mockito/mockito.dart';
import 'package:mockito/annotations.dart';
import 'package:provider/provider.dart';
import 'package:dadi/screens/home_screen.dart';
import 'package:dadi/services/web3_service.dart';
import 'package:dadi/services/buttplug_service.dart';

// This will be generated by build_runner
@GenerateMocks([Web3Service, ButtplugService])
class MockWeb3Service extends Mock implements Web3Service {
  @override
  bool get isConnected => false;
}

class MockButtplugService extends Mock implements ButtplugService {
  @override
  bool get isConnected => false;
}

void main() {
  late MockWeb3Service mockWeb3Service;
  late MockButtplugService mockButtplugService;

  setUp(() {
    mockWeb3Service = MockWeb3Service();
    mockButtplugService = MockButtplugService();
  });

  Widget createTestApp() {
    return MultiProvider(
      providers: [
        ChangeNotifierProvider<Web3Service>.value(value: mockWeb3Service),
        ChangeNotifierProvider<ButtplugService>.value(value: mockButtplugService),
      ],
      child: const MaterialApp(
        home: HomeScreen(),
      ),
    );
  }

  group('HomeScreen Tests', () {
    testWidgets('Shows connect wallet button when not connected',
        (WidgetTester tester) async {
      when(mockWeb3Service.isConnected).thenReturn(false);
      when(mockButtplugService.isConnected).thenReturn(false);

      await tester.pumpWidget(createTestApp());

      expect(find.text('Connect Wallet'), findsOneWidget);
    });

    testWidgets('Shows connect device button when wallet connected',
        (WidgetTester tester) async {
      when(mockWeb3Service.isConnected).thenReturn(true);
      when(mockButtplugService.isConnected).thenReturn(false);

      await tester.pumpWidget(createTestApp());

      expect(find.text('Connect Device'), findsOneWidget);
    });
  });
}
